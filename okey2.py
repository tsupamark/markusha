import randomimport os
import random
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from aiogram.utils import executor

API_TOKEN = os.getenv("API_TOKEN")  # –¢–æ–∫–µ–Ω –±–µ—Ä—ë—Ç—Å—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –ü—Ä–æ—Å—Ç–∞—è —Å–∏—Å—Ç–µ–º–∞ –±–∞–ª–∞–Ω—Å–∞
user_balances = {}

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message_handler(commands=['start'])
async def start_handler(message: Message):
    user_id = message.from_user.id
    user_balances[user_id] = 1000
    await message.answer("üé∞ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–∞–∑–∏–Ω–æ-–±–æ—Ç!\n–£ —Ç–µ–±—è 1000 –º–æ–Ω–µ—Ç.\n–ò—Å–ø–æ–ª—å–∑—É–π /spin —á—Ç–æ–±—ã –∏–≥—Ä–∞—Ç—å!")

# –ö–æ–º–∞–Ω–¥–∞ /balance
@dp.message_handler(commands=['balance'])
async def balance_handler(message: Message):
    user_id = message.from_user.id
    balance = user_balances.get(user_id, 0)
    await message.answer(f"üí∞ –¢–≤–æ–π –±–∞–ª–∞–Ω—Å: {balance} –º–æ–Ω–µ—Ç")

# –ö–æ–º–∞–Ω–¥–∞ /spin
@dp.message_handler(commands=['spin'])
async def spin_handler(message: Message):
    user_id = message.from_user.id
    balance = user_balances.get(user_id, 0)

    if balance < 100:
        await message.answer("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç –¥–ª—è —Å–ø–∏–Ω–∞ (–Ω—É–∂–Ω–æ 100).")
        return

    user_balances[user_id] -= 100
    symbols = ['üçí', 'üçã', 'üîî', '‚≠ê', '7Ô∏è‚É£']
    result = [random.choice(symbols) for _ in range(3)]

    win = 0
    if result[0] == result[1] == result[2]:
        win = 500
        user_balances[user_id] += win
        outcome = "üéâ –î–∂–µ–∫–ø–æ—Ç! –¢—ã –≤—ã–∏–≥—Ä–∞–ª 500 –º–æ–Ω–µ—Ç!"
    elif result[0] == result[1] or result[1] == result[2] or result[0] == result[2]:
        win = 200
        user_balances[user_id] += win
        outcome = "‚ú® –ú–∞–ª—ã–π –≤—ã–∏–≥—Ä—ã—à! –¢—ã –ø–æ–ª—É—á–∏–ª 200 –º–æ–Ω–µ—Ç."
    else:
        outcome = "üò¢ –ù–∏—á–µ–≥–æ –Ω–µ –≤—ã–ø–∞–ª–æ."

    await message.answer(f"{' | '.join(result)}\n{outcome}\nüí∞ –ë–∞–ª–∞–Ω—Å: {user_balances[user_id]} –º–æ–Ω–µ—Ç")

if __name__ == '__main__':
    executor.start_polling(dp)
